# shellcheck shell=bash disable=SC1091,SC2034 #xsh

# Section: Arg
xrc ui
WORK_DIR="$(x wsroot)"
# EndSection

# Section: Main
use_npm_verison() {
	[ -z "$(command -v nvm)" ] && return 0
	nvm use
}

rm_react_type() {
	[ -d "$WORK_DIR/node_modules/@types/react" ] && rm -rf "$WORK_DIR/node_modules/@types/react"
}

if [ ! -d "$WORK_DIR/node_modules" ]; then
    use_npm_verison && yarn install && x build plugin && rm_react_type
else
	case "${1:=repo}" in
		all)
			rm -rf "$WORK_DIR/node_modules" "$WORK_DIR/yarn.lock" &&
			use_npm_verison && yarn install && x build plugin && rm_react_type
		;;
		none)
			:
		;;
		code)
			while read -r s; do
				code --install-extension "$s" --force
			done <<A
zokugun.explicit-folding
esbenp.prettier-vscode
stylelint.vscode-stylelint
bradlc.vscode-tailwindcss
ms-vscode.vscode-typescript-tslint-plugin
johnsoncodehk.volar
dbaeumer.vscode-eslint
mrmlnc.vscode-scss
A

		;;
		update|*)
			ui prompt "$(ui bold green 'Is need to remove node_modules (Y/n)')" _IS_NEED
				if [ -z "$_IS_NEED" ] || [ "$_IS_NEED" = 'y' ] || [ "$_IS_NEED" = 'Y' ] ;then
					rm -rf "$WORK_DIR/node_modules"
					use_npm_verison && yarn install && x build plugin && rm_react_type
				else
					use_npm_verison &&yarn install && x build plugin && rm_react_type
				fi
		;;
	esac
fi
# EndSection

# Section: Advise
if ___x_cmd_is_suitable_advise_env; then
	# init is advise keyword
    x advise rm "init" "init"
    advise "init" "init" - <<A
{
    "all": "--- delete lock file adn reinstall all dependencies",
    "code": "--- install VSCode plugin for x-cmd doc",
    "none": "--- check node_modules file and auto install dependencies",
    "update": "--- update all dependencies"
}
A
fi
# EndSection